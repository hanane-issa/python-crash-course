Traceback (most recent call last):
  File "C:\Users\hanan\AppData\Local\Programs\Python\Python313\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "C:\Users\hanan\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\hanan\AppData\Local\Programs\Python\Python313\Lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\hanan\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "C:\Users\hanan\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "C:\Users\hanan\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\hanan\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# selecting a single row
print("Single row selection")
print(transposed_dict_df.loc["participant1"])
print("------")
print("Multiple row selection")
# selecting multiple rows - you need to put the labels in a list 
# like in multiple column selection previously
transposed_dict_df.loc[["participant1", "participant8"]]
------------------

----- stdout -----
Single row selection
------------------

[31m---------------------------------------------------------------------------[39m
[31mKeyError[39m                                  Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[6][39m[32m, line 3[39m
[32m      1[39m [38;5;66;03m# selecting a single row[39;00m
[32m      2[39m [38;5;28mprint[39m([33m"[39m[33mSingle row selection[39m[33m"[39m)
[32m----> [39m[32m3[39m [38;5;28mprint[39m([43mtransposed_dict_df[49m[43m.[49m[43mloc[49m[43m[[49m[33;43m"[39;49m[33;43mparticipant1[39;49m[33;43m"[39;49m[43m][49m)
[32m      4[39m [38;5;28mprint[39m([33m"[39m[33m------[39m[33m"[39m)
[32m      5[39m [38;5;28mprint[39m([33m"[39m[33mMultiple row selection[39m[33m"[39m)

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\core\indexing.py:1191[39m, in [36m_LocationIndexer.__getitem__[39m[34m(self, key)[39m
[32m   1189[39m maybe_callable = com.apply_if_callable(key, [38;5;28mself[39m.obj)
[32m   1190[39m maybe_callable = [38;5;28mself[39m._check_deprecated_callable_usage(key, maybe_callable)
[32m-> [39m[32m1191[39m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m_getitem_axis[49m[43m([49m[43mmaybe_callable[49m[43m,[49m[43m [49m[43maxis[49m[43m=[49m[43maxis[49m[43m)[49m

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\core\indexing.py:1431[39m, in [36m_LocIndexer._getitem_axis[39m[34m(self, key, axis)[39m
[32m   1429[39m [38;5;66;03m# fall thru to straight lookup[39;00m
[32m   1430[39m [38;5;28mself[39m._validate_key(key, axis)
[32m-> [39m[32m1431[39m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m_get_label[49m[43m([49m[43mkey[49m[43m,[49m[43m [49m[43maxis[49m[43m=[49m[43maxis[49m[43m)[49m

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\core\indexing.py:1381[39m, in [36m_LocIndexer._get_label[39m[34m(self, label, axis)[39m
[32m   1379[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_get_label[39m([38;5;28mself[39m, label, axis: AxisInt):
[32m   1380[39m     [38;5;66;03m# GH#5567 this will fail if the label is not present in the axis.[39;00m
[32m-> [39m[32m1381[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43mobj[49m[43m.[49m[43mxs[49m[43m([49m[43mlabel[49m[43m,[49m[43m [49m[43maxis[49m[43m=[49m[43maxis[49m[43m)[49m

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\core\generic.py:4301[39m, in [36mNDFrame.xs[39m[34m(self, key, axis, level, drop_level)[39m
[32m   4299[39m             new_index = index[loc]
[32m   4300[39m [38;5;28;01melse[39;00m:
[32m-> [39m[32m4301[39m     loc = [43mindex[49m[43m.[49m[43mget_loc[49m[43m([49m[43mkey[49m[43m)[49m
[32m   4303[39m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(loc, np.ndarray):
[32m   4304[39m         [38;5;28;01mif[39;00m loc.dtype == np.bool_:

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\core\indexes\range.py:417[39m, in [36mRangeIndex.get_loc[39m[34m(self, key)[39m
[32m    415[39m         [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m(key) [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01merr[39;00m
[32m    416[39m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(key, Hashable):
[32m--> [39m[32m417[39m     [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m(key)
[32m    418[39m [38;5;28mself[39m._check_indexing_error(key)
[32m    419[39m [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m(key)

[31mKeyError[39m: 'participant1'

